import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { db, auth } from "../../config/db/firebase";
import { doc, getDoc, setDoc, updateDoc, increment } from "firebase/firestore";
import { onAuthStateChanged } from "firebase/auth";

const Checkin = () => {
  const { cid } = useParams();
  const [cno, setCno] = useState("");
  const [code, setCode] = useState("");
  const [currentCode, setCurrentCode] = useState("");
  const [status, setStatus] = useState(null);
  const [currentUser, setCurrentUser] = useState(null);

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (user) => {
      if (user) {
        setCurrentUser(user);
      } else {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠");
      }
    });
    return () => unsubscribe();
  }, []);

  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≠‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
  useEffect(() => {
    if (cno) {
      fetchCheckinData();
    }
  }, [cno]);

  const fetchCheckinData = async () => {
    try {
      const checkinDocRef = doc(db, `classroom/${cid}/checkin/${cno}`);
      const checkinSnap = await getDoc(checkinDocRef);
      if (checkinSnap.exists()) {
        const data = checkinSnap.data();
        setCurrentCode(data.code);
        setStatus(data.status);
      } else {
        alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠!");
      }
    } catch (error) {
      console.error("Error fetching check-in data:", error);
    }
  };

  const handleCheckin = async () => {
    if (!currentUser) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô");
      return;
    }

    if (status === 0) {
      alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°");
      return;
    }

    if (code !== currentCode) {
      alert("‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!");
      return;
    }

    try {
      const studentRef = doc(db, `classroom/${cid}/checkin/${cno}/students/${currentUser.uid}`);
      await setDoc(studentRef, {
        stdid: currentUser.uid,
        name: currentUser.displayName || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠",
        remark: "‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô",
        date: new Date().toISOString(),
      });

      // üî• ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô (‡πÄ‡∏û‡∏¥‡πà‡∏° count ‡∏ó‡∏µ‡∏•‡∏∞ 1)
      const checkinDocRef = doc(db, `classroom/${cid}/checkin/${cno}`);
      await updateDoc(checkinDocRef, {
        count: increment(1), // ‡πÄ‡∏û‡∏¥‡πà‡∏° count ‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏µ‡∏•‡∏∞ 1
      });

      alert("‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
    } catch (error) {
      console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error);
      alert("‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    }
  };

  return (
    <div>
      <h2>‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠</h2>
      <p>‡∏£‡∏≠‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {cno}</p>
      <input
        type="text"
        placeholder="‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠ (cno)"
        value={cno}
        onChange={(e) => setCno(e.target.value)}
      />
      <input
        type="text"
        placeholder="‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠"
        value={code}
        onChange={(e) => setCode(e.target.value)}
      />
      <button onClick={handleCheckin} disabled={status === 0}>
        ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠
      </button>
      {status === 0 && <p style={{ color: "red" }}>‡πÄ‡∏ä‡πá‡∏Ñ‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°</p>}
    </div>
  );
};

export default Checkin;
